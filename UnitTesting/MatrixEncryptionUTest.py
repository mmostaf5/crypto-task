from EncryptionModule.MatrixEncryption import MatrixEncryption
from Config import MatrixEncyrptionConfig
import unittest


class TestMatrixEncryption(unittest.TestCase):
    __matrix_encryption_obj = MatrixEncryption(MatrixEncyrptionConfig["encryption_matrix"])

    def test_single_char_lower(self):
        lower_chars = 'abcdefghijklmnopqrstuvwxyz'
        lower_chars_encrypted = [
            [14.0, 17.0, 4.0, 15.0, 8.0, 11.0, 7.0, 1.0, 3.0, 14.0, 15.0, 13.0, 12.0, 20.0, 19.0, 3.0],
            [13.0, 10.0, 7.0, 13.0, 15.0, 12.0, 12.0, 3.0, 5.0, 12.0, 13.0, 7.0, 9.0, 18.0, 15.0, 5.0],
            [18.0, 19.0, 8.0, 17.0, 17.0, 15.0, 13.0, 3.0, 5.0, 20.0, 18.0, 13.0, 18.0, 27.0, 22.0, 5.0],
            [13.0, 10.0, 4.0, 18.0, 6.0, 10.0, 13.0, 10.0, 5.0, 14.0, 15.0, 14.0, 9.0, 18.0, 13.0, 12.0],
            [18.0, 19.0, 5.0, 22.0, 8.0, 13.0, 14.0, 10.0, 5.0, 22.0, 20.0, 20.0, 18.0, 27.0, 20.0, 12.0],
            [17.0, 12.0, 8.0, 20.0, 15.0, 14.0, 19.0, 12.0, 7.0, 20.0, 18.0, 14.0, 15.0, 25.0, 16.0, 14.0],
            [22.0, 21.0, 9.0, 24.0, 17.0, 17.0, 20.0, 12.0, 7.0, 28.0, 23.0, 20.0, 24.0, 34.0, 23.0, 14.0],
            [15.0, 12.0, 12.0, 14.0, 15.0, 15.0, 14.0, 9.0, 6.0, 14.0, 12.0, 8.0, 8.0, 20.0, 17.0, 5.0],
            [20.0, 21.0, 13.0, 18.0, 17.0, 18.0, 15.0, 9.0, 6.0, 22.0, 17.0, 14.0, 17.0, 29.0, 24.0, 5.0],
            [19.0, 14.0, 16.0, 16.0, 24.0, 19.0, 20.0, 11.0, 8.0, 20.0, 15.0, 8.0, 14.0, 27.0, 20.0, 7.0],
            [24.0, 23.0, 17.0, 20.0, 26.0, 22.0, 21.0, 11.0, 8.0, 28.0, 20.0, 14.0, 23.0, 36.0, 27.0, 7.0],
            [19.0, 14.0, 13.0, 21.0, 15.0, 17.0, 21.0, 18.0, 8.0, 22.0, 17.0, 15.0, 14.0, 27.0, 18.0, 14.0],
            [24.0, 23.0, 14.0, 25.0, 17.0, 20.0, 22.0, 18.0, 8.0, 30.0, 22.0, 21.0, 23.0, 36.0, 25.0, 14.0],
            [23.0, 16.0, 17.0, 23.0, 24.0, 21.0, 27.0, 20.0, 10.0, 28.0, 20.0, 15.0, 20.0, 34.0, 21.0, 16.0],
            [28.0, 25.0, 18.0, 27.0, 26.0, 24.0, 28.0, 20.0, 10.0, 36.0, 25.0, 21.0, 29.0, 43.0, 28.0, 16.0],
            [18.0, 15.0, 10.0, 14.0, 7.0, 13.0, 7.0, 1.0, 12.0, 11.0, 14.0, 16.0, 6.0, 17.0, 18.0, 3.0],
            [23.0, 24.0, 11.0, 18.0, 9.0, 16.0, 8.0, 1.0, 12.0, 19.0, 19.0, 22.0, 15.0, 26.0, 25.0, 3.0],
            [22.0, 17.0, 14.0, 16.0, 16.0, 17.0, 13.0, 3.0, 14.0, 17.0, 17.0, 16.0, 12.0, 24.0, 21.0, 5.0],
            [27.0, 26.0, 15.0, 20.0, 18.0, 20.0, 14.0, 3.0, 14.0, 25.0, 22.0, 22.0, 21.0, 33.0, 28.0, 5.0],
            [22.0, 17.0, 11.0, 21.0, 7.0, 15.0, 14.0, 10.0, 14.0, 19.0, 19.0, 23.0, 12.0, 24.0, 19.0, 12.0],
            [27.0, 26.0, 12.0, 25.0, 9.0, 18.0, 15.0, 10.0, 14.0, 27.0, 24.0, 29.0, 21.0, 33.0, 26.0, 12.0],
            [26.0, 19.0, 15.0, 23.0, 16.0, 19.0, 20.0, 12.0, 16.0, 25.0, 22.0, 23.0, 18.0, 31.0, 22.0, 14.0],
            [31.0, 28.0, 16.0, 27.0, 18.0, 22.0, 21.0, 12.0, 16.0, 33.0, 27.0, 29.0, 27.0, 40.0, 29.0, 14.0],
            [24.0, 19.0, 19.0, 17.0, 16.0, 20.0, 15.0, 9.0, 15.0, 19.0, 16.0, 17.0, 11.0, 26.0, 23.0, 5.0],
            [29.0, 28.0, 20.0, 21.0, 18.0, 23.0, 16.0, 9.0, 15.0, 27.0, 21.0, 23.0, 20.0, 35.0, 30.0, 5.0],
            [28.0, 21.0, 23.0, 19.0, 25.0, 24.0, 21.0, 11.0, 17.0, 25.0, 19.0, 17.0, 17.0, 33.0, 26.0, 7.0]]
        for idx, character in enumerate(lower_chars):
            self.assertEqual(self.__matrix_encryption_obj.encrypt(character)[0],
                             lower_chars_encrypted[idx],
                             msg='Failed in TestShiftEncryption.test_single_char_lower')

    def test_single_char_upper(self):
        upper_chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
        upper_chars_encrypted = [[8.0, 11.0, 4.0, 8.0, 6.0, 4.0, 6.0, 1.0, 1.0, 8.0, 11.0, 11.0, 10.0, 11.0, 15.0, 3.0],
                                 [7.0, 4.0, 7.0, 6.0, 13.0, 5.0, 11.0, 3.0, 3.0, 6.0, 9.0, 5.0, 7.0, 9.0, 11.0, 5.0],
                                 [12.0, 13.0, 8.0, 10.0, 15.0, 8.0, 12.0, 3.0, 3.0, 14.0, 14.0, 11.0, 16.0, 18.0, 18.0,
                                  5.0],
                                 [7.0, 4.0, 4.0, 11.0, 4.0, 3.0, 12.0, 10.0, 3.0, 8.0, 11.0, 12.0, 7.0, 9.0, 9.0, 12.0],
                                 [12.0, 13.0, 5.0, 15.0, 6.0, 6.0, 13.0, 10.0, 3.0, 16.0, 16.0, 18.0, 16.0, 18.0, 16.0,
                                  12.0],
                                 [11.0, 6.0, 8.0, 13.0, 13.0, 7.0, 18.0, 12.0, 5.0, 14.0, 14.0, 12.0, 13.0, 16.0, 12.0,
                                  14.0],
                                 [16.0, 15.0, 9.0, 17.0, 15.0, 10.0, 19.0, 12.0, 5.0, 22.0, 19.0, 18.0, 22.0, 25.0,
                                  19.0, 14.0],
                                 [9.0, 6.0, 12.0, 7.0, 13.0, 8.0, 13.0, 9.0, 4.0, 8.0, 8.0, 6.0, 6.0, 11.0, 13.0, 5.0],
                                 [14.0, 15.0, 13.0, 11.0, 15.0, 11.0, 14.0, 9.0, 4.0, 16.0, 13.0, 12.0, 15.0, 20.0,
                                  20.0, 5.0],
                                 [13.0, 8.0, 16.0, 9.0, 22.0, 12.0, 19.0, 11.0, 6.0, 14.0, 11.0, 6.0, 12.0, 18.0, 16.0,
                                  7.0],
                                 [18.0, 17.0, 17.0, 13.0, 24.0, 15.0, 20.0, 11.0, 6.0, 22.0, 16.0, 12.0, 21.0, 27.0,
                                  23.0, 7.0],
                                 [13.0, 8.0, 13.0, 14.0, 13.0, 10.0, 20.0, 18.0, 6.0, 16.0, 13.0, 13.0, 12.0, 18.0,
                                  14.0, 14.0],
                                 [18.0, 17.0, 14.0, 18.0, 15.0, 13.0, 21.0, 18.0, 6.0, 24.0, 18.0, 19.0, 21.0, 27.0,
                                  21.0, 14.0],
                                 [17.0, 10.0, 17.0, 16.0, 22.0, 14.0, 26.0, 20.0, 8.0, 22.0, 16.0, 13.0, 18.0, 25.0,
                                  17.0, 16.0],
                                 [22.0, 19.0, 18.0, 20.0, 24.0, 17.0, 27.0, 20.0, 8.0, 30.0, 21.0, 19.0, 27.0, 34.0,
                                  24.0, 16.0],
                                 [12.0, 9.0, 10.0, 7.0, 5.0, 6.0, 6.0, 1.0, 10.0, 5.0, 10.0, 14.0, 4.0, 8.0, 14.0, 3.0],
                                 [17.0, 18.0, 11.0, 11.0, 7.0, 9.0, 7.0, 1.0, 10.0, 13.0, 15.0, 20.0, 13.0, 17.0, 21.0,
                                  3.0],
                                 [16.0, 11.0, 14.0, 9.0, 14.0, 10.0, 12.0, 3.0, 12.0, 11.0, 13.0, 14.0, 10.0, 15.0,
                                  17.0, 5.0],
                                 [21.0, 20.0, 15.0, 13.0, 16.0, 13.0, 13.0, 3.0, 12.0, 19.0, 18.0, 20.0, 19.0, 24.0,
                                  24.0, 5.0],
                                 [16.0, 11.0, 11.0, 14.0, 5.0, 8.0, 13.0, 10.0, 12.0, 13.0, 15.0, 21.0, 10.0, 15.0,
                                  15.0, 12.0],
                                 [21.0, 20.0, 12.0, 18.0, 7.0, 11.0, 14.0, 10.0, 12.0, 21.0, 20.0, 27.0, 19.0, 24.0,
                                  22.0, 12.0],
                                 [20.0, 13.0, 15.0, 16.0, 14.0, 12.0, 19.0, 12.0, 14.0, 19.0, 18.0, 21.0, 16.0, 22.0,
                                  18.0, 14.0],
                                 [25.0, 22.0, 16.0, 20.0, 16.0, 15.0, 20.0, 12.0, 14.0, 27.0, 23.0, 27.0, 25.0, 31.0,
                                  25.0, 14.0],
                                 [18.0, 13.0, 19.0, 10.0, 14.0, 13.0, 14.0, 9.0, 13.0, 13.0, 12.0, 15.0, 9.0, 17.0,
                                  19.0, 5.0],
                                 [23.0, 22.0, 20.0, 14.0, 16.0, 16.0, 15.0, 9.0, 13.0, 21.0, 17.0, 21.0, 18.0, 26.0,
                                  26.0, 5.0],
                                 [22.0, 15.0, 23.0, 12.0, 23.0, 17.0, 20.0, 11.0, 15.0, 19.0, 15.0, 15.0, 15.0, 24.0,
                                  22.0, 7.0]]

        for idx, character in enumerate(upper_chars):
            self.assertEqual(self.__matrix_encryption_obj.encrypt(character)[0],
                             upper_chars_encrypted[idx],
                             msg='Failed in TestShiftEncryption.test_single_char_upper')

    def test_phrase(self):
        input_str = 'Hello World!'
        input_str_encrypted = [[9.0, 6.0, 12.0, 7.0, 13.0, 8.0, 13.0, 9.0, 4.0, 8.0, 8.0, 6.0, 6.0, 11.0, 13.0, 5.0],
                               [18.0, 19.0, 5.0, 22.0, 8.0, 13.0, 14.0, 10.0, 5.0, 22.0, 20.0, 20.0, 18.0, 27.0, 20.0,
                                12.0],
                               [19.0, 14.0, 13.0, 21.0, 15.0, 17.0, 21.0, 18.0, 8.0, 22.0, 17.0, 15.0, 14.0, 27.0, 18.0,
                                14.0],
                               [19.0, 14.0, 13.0, 21.0, 15.0, 17.0, 21.0, 18.0, 8.0, 22.0, 17.0, 15.0, 14.0, 27.0, 18.0,
                                14.0],
                               [28.0, 25.0, 18.0, 27.0, 26.0, 24.0, 28.0, 20.0, 10.0, 36.0, 25.0, 21.0, 29.0, 43.0,
                                28.0, 16.0],
                               [6.0, 6.0, 0.0, 7.0, 2.0, 7.0, 1.0, 0.0, 2.0, 6.0, 4.0, 2.0, 2.0, 9.0, 4.0, 0.0],
                               [25.0, 22.0, 16.0, 20.0, 16.0, 15.0, 20.0, 12.0, 14.0, 27.0, 23.0, 27.0, 25.0, 31.0,
                                25.0, 14.0],
                               [28.0, 25.0, 18.0, 27.0, 26.0, 24.0, 28.0, 20.0, 10.0, 36.0, 25.0, 21.0, 29.0, 43.0,
                                28.0, 16.0],
                               [22.0, 17.0, 14.0, 16.0, 16.0, 17.0, 13.0, 3.0, 14.0, 17.0, 17.0, 16.0, 12.0, 24.0, 21.0,
                                5.0],
                               [19.0, 14.0, 13.0, 21.0, 15.0, 17.0, 21.0, 18.0, 8.0, 22.0, 17.0, 15.0, 14.0, 27.0, 18.0,
                                14.0],
                               [13.0, 10.0, 4.0, 18.0, 6.0, 10.0, 13.0, 10.0, 5.0, 14.0, 15.0, 14.0, 9.0, 18.0, 13.0,
                                12.0],
                               [11.0, 15.0, 1.0, 11.0, 4.0, 10.0, 2.0, 0.0, 2.0, 14.0, 9.0, 8.0, 11.0, 18.0, 11.0, 0.0]]

        self.assertEqual(self.__matrix_encryption_obj.encrypt(input_str),
                         input_str_encrypted,
                         msg='Failed in TestShiftEncryption.test_phrase')


if __name__ == '__main__':
    unittest.main()
